import Image
import numpy as np
import os
from sensores.CapturarPantalla import CapturarPantalla

class Leer_RGB():

	def __init__(self):
		pass

	def LeerImagen(self,ruta):
		img=Image.open(ruta)
		img = img.convert('RGB')
		arreglo = np.array(img)
		self.buscarJuego2(arreglo)
	
	#se le puede cambiar por BuscarBordeFlood_it
	def buscarJuego(self,arreglo):
		ArregloCantPixel=[]
		print  "tamano de pantalla en x:"+str(len(arreglo))
		print  "tamano de pantalla en y:"+str(len(arreglo[0]))

		#lo que se busca es la linea que tenga mas pixeles negros osea los bordes
		contadorPixel=0
		for x, fila in enumerate(arreglo):
			for y, columna in enumerate(fila):
				if np.array_equal(columna,[0,0,0]):
					contadorPixel=contadorPixel+1

			ArregloCantPixel.append([x,contadorPixel])
			contadorPixel=0

		#encontrar el maximo valor de pixeles negros 
		maxPixel=[]
		for x,contadorPixel in ArregloCantPixel:
			maxPixel.append(contadorPixel)



		maximoValor=max(maxPixel)
		print maximoValor
		maximoValorCont=0

		#luego buscamos de cuanto es el grosor de los bordes


		for elemento in maxPixel:
			if elemento==maximoValor:
				maximoValorCont=maximoValorCont+1
		print str(maximoValor)+": "+str(maximoValorCont)
		print "tamano del borde: "+str(maximoValorCont/2)

		#ademas buscamos cuales son los ejes en donde estan los bordes

		
		bordeDectectadoX=[]
		ejeX=[]
		
		for i in range(len(arreglo)):
			x,contadorPixel=ArregloCantPixel[i]
			if contadorPixel==maximoValor:
				bordeDectectadoX.append(arreglo[x])
				ejeX.append(x)
		

		ejeY=[]
		for y,columna in enumerate(bordeDectectadoX[0]):
				if np.array_equal(columna,[0,0,0]):
					ejeY.append(y)

		#recoremos el arreglo en donde todo lo que este dentro de los limites
		#osea los borde se agrege a un arreglo

		imagenArreglo=[]
		for fila in arreglo[range(ejeX[0],ejeX[-1])]:
			imagenArreglo.append(fila[range(ejeY[0],ejeY[-1])])

		#el arreglo se convierte en imagen para prueba de lo que contiene el arreglo 

		
		patron=np.array(imagenArreglo)
		imgPatron = Image.fromarray(patron.astype('uint8'))
		imgPatron.show()

	def buscarJuego2(self,arreglo):
		ArregloCantPixel=[]
		listaPixeles=[]
		print  "tamano de pantalla en x:"+str(len(arreglo))
		print  "tamano de pantalla en y:"+str(len(arreglo[0]))

		#lo que se busca es la linea que tenga mas pixeles negros osea los bordes
		
		contadorPixel=0
		
		for x, fila in enumerate(arreglo):
			for y, columna in enumerate(fila):
				listaPixeles.append(columna)
				
				#if np.array_equal(columna,[186,172,160]):

				ArregloCantPixel.append([x,contadorPixel])
			contadorPixel=0
		tempArreglo=list(set(listaPixeles))
		print tempArreglo
		



"""
		#encontrar el maximo valor de pixeles negros 
		maxPixel=[]
		for x,contadorPixel in ArregloCantPixel:
			maxPixel.append(contadorPixel)



		maximoValor=max(maxPixel)
		print maximoValor
		maximoValorCont=0

		#luego buscamos de cuanto es el grosor de los bordes


		for elemento in maxPixel:
			if elemento==maximoValor:
				maximoValorCont=maximoValorCont+1
		print str(maximoValor)+": "+str(maximoValorCont)
		print "tamano del borde: "+str(maximoValorCont/2)

		#ademas buscamos cuales son los ejes en donde estan los bordes

		
		bordeDectectadoX=[]
		ejeX=[]
		
		for i in range(len(arreglo)):
			x,contadorPixel=ArregloCantPixel[i]
			if contadorPixel==maximoValor:
				bordeDectectadoX.append(arreglo[x])
				ejeX.append(x)
		

		ejeY=[]
		for y,columna in enumerate(bordeDectectadoX[0]):
				if np.array_equal(columna,[186,172,160]):
					ejeY.append(y)

		#recoremos el arreglo en donde todo lo que este dentro de los limites
		#osea los borde se agrege a un arreglo

		imagenArreglo=[]
		for fila in arreglo[range(ejeX[0],ejeX[-1])]:
			imagenArreglo.append(fila[range(ejeY[0],ejeY[-1])])

		#el arreglo se convierte en imagen para prueba de lo que contiene el arreglo 

		
		patron=np.array(imagenArreglo)
		imgPatron = Image.fromarray(patron.astype('uint8'))
		imgPatron.show()
	"""

		





		






				
				
			
		


				




		



		
